name: Build

on:
  workflow_run:
    workflows:
      - Tests
    types:
      - completed

jobs:
  get-context:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      is_tagged: ${{ steps.check-tag.outputs.is_tagged }}
      tag_name: ${{ steps.check-tag.outputs.tag_name }}
      original_event: ${{ steps.check-source.outputs.original_event }}
      original_ref: ${{ steps.check-source.outputs.original_ref }}
      original_branch: ${{ steps.check-source.outputs.original_branch }}
      should_release: ${{ steps.check-source.outputs.should_release }}
    steps:
      - name: Get source workflow information
        id: check-source
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = context.payload.workflow_run.id;
            const { data: workflowRun } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });
            
            // Extract original event type and branch information
            const originalEvent = workflowRun.event;
            const originalRef = workflowRun.head_repository ? 
              `${workflowRun.head_repository.owner.login}:${workflowRun.head_branch}` : 
              'unknown';
            const originalBranch = workflowRun.head_branch || 'unknown';
            
            console.log(`Original trigger - Event: ${originalEvent}, Ref: ${originalRef}, Branch: ${originalBranch}`);
            
            // Determine if this should trigger a release later
            // Release only if it's a push to main or a tag
            const isMainPush = originalEvent === 'push' && originalBranch === 'main';
            const isTag = originalEvent === 'push' && originalBranch === null;
            const shouldRelease = isMainPush || isTag;
            
            core.setOutput("original_event", originalEvent);
            core.setOutput("original_ref", originalRef);
            core.setOutput("original_branch", originalBranch);
            core.setOutput("should_release", shouldRelease.toString());
            
            // Create a build-context.json file to pass between workflows
            const fs = require('fs');
            const buildContext = {
              original_event: originalEvent,
              original_ref: originalRef,
              original_branch: originalBranch,
              should_release: shouldRelease,
              workflow_run_id: runId,
              head_sha: workflowRun.head_sha
            };
            
            fs.writeFileSync('build-context.json', JSON.stringify(buildContext, null, 2));
            console.log('Created build-context.json with workflow information');

      - name: Upload build context
        uses: actions/upload-artifact@v4
        with:
          name: build-context
          path: build-context.json
          retention-days: 1

      - name: Check if source workflow was triggered by a tag
        id: check-tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = ${{ github.event.workflow_run.id }};
            const { data: workflowRun } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });

            // Check if the original trigger was a tag
            const isTag = workflowRun.head_branch === null && workflowRun.head_repository.full_name === context.repo.owner + '/' + context.repo.repo;
            let tagName = '';

            if (isTag) {
              // Get the tag name from the commit reference
              const refs = await github.rest.git.listMatchingRefs({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/'
              });
              
              // Find the tag pointing to this commit
              const tag = refs.data.find(ref => ref.object.sha === workflowRun.head_sha);
              if (tag) {
                tagName = tag.ref.replace('refs/tags/', '');
              }
            }

            core.setOutput("is_tagged", isTag.toString());
            core.setOutput("tag_name", tagName);
            console.log(`Is tagged build: ${isTag}, Tag name: ${tagName}`);

  storybook:
    needs: get-context
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
        run: yarn --immutable

      - name: Build
        run: yarn build:storybook

      - name: Store storybook
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          retention-days: 1
          if-no-files-found: error
          path: storybook-static

  compile:
    needs: get-context
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Setup Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install required python deps
        run: python3 -m pip install setuptools

      - name: Install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
        run: yarn --immutable

      - name: Install build deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y libudev-dev

      - name: Build
        run: yarn compile:production
        env:
          GITHUB_PR_BUILDS_KEY: ${{ secrets.PR_BUILDS_TOKEN }}

      - name: Store compiled source
        uses: actions/upload-artifact@v4
        with:
          name: compiled-${{ matrix.os }}
          retention-days: 1
          if-no-files-found: error
          path: build

  build-and-test-app:
    needs: [get-context, compile]
    runs-on: ${{ matrix.os }}
    env:
      DISPLAY: :0

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
        run: yarn --immutable

      - name: Fetch compiled source
        uses: actions/download-artifact@v4
        with:
          name: compiled-${{ matrix.os }}
          path: build

      - name: Build
        run: yarn run pack

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: app-builds-${{ matrix.os }}
          retention-days: 15
          if-no-files-found: error
          path: |
            dist/*.snap
            dist/*.AppImage
            dist/*.msi
            dist/*.dmg
            dist/latest-mac.yml
            dist/latest-linux.yml

      - run: yarn playwright install --with-deps chromium chromium

      - name: Setup xvfb (Linux)
        if: runner.os == 'Linux'
        run: |
          # start xvfb in the background
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

      - name: Run tests
        run: yarn e2e:app
        env:
          CI: "true"
          PWTEST_VIDEO: "true"
          HEADFUL: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: electron-${{ matrix.os }}-test-results
          path: playwright-report

      - name: Upload video recordings
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: electron-${{ matrix.os }}-recordings
          path: e2e-recordings

  e2e-web:
    needs: [get-context, compile]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Install
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: yarn --immutable --mode=skip-build

      - name: Install browsers
        run: yarn playwright install --with-deps

      - name: Fetch compiled source
        uses: actions/download-artifact@v4
        with:
          name: compiled-ubuntu-22.04
          path: build

      - name: Run tests
        run: yarn e2e:web
        env:
          CI: "true"
          PWTEST_VIDEO: "true"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: video-web-linux-test-results
          path: playwright-report

  check-draft-status:
    needs: get-context
    runs-on: ubuntu-22.04
    outputs:
      is_draft: ${{ steps.check.outputs.is_draft }}
      pr_number: ${{ steps.check.outputs.pr_number }}
    steps:
      - name: Check if PR is a draft and extract PR number
        id: check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = context.payload.workflow_run.id;
            const { data: workflowRun } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });

            const branch = workflowRun.head_branch;

            // If this is a tag or not a PR, return false for draft status
            if (!branch) {
              core.setOutput("is_draft", "false");
              core.setOutput("pr_number", "");
              return;
            }

            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branch}`
            });

            const pr = prs.find(pr => pr.head.sha === workflowRun.head_sha);
            const isDraft = pr?.draft === true;
            const prNumber = pr ? pr.number : '';

            core.setOutput("is_draft", isDraft.toString());
            core.setOutput("pr_number", prNumber.toString());

            console.log(`PR #${prNumber}, Draft status: ${isDraft}`);

  preview-web:
    needs: [get-context, check-draft-status, compile, storybook]
    runs-on: ubuntu-22.04
    if: |
      github.event.workflow_run.event == 'pull_request' &&
      needs.check-draft-status.outputs.is_draft == 'false' && 
      needs.check-draft-status.outputs.pr_number != ''
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Fetch compiled source
        uses: actions/download-artifact@v4
        with:
          name: compiled-ubuntu-22.04
          path: build

      - name: Fetch storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: build/renderer/storybook

      - name: Deploy preview
        id: cloudflare-preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy build/renderer --project-name=buddy
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Find preview comment if present
        uses: peter-evans/find-comment@v3
        id: find-preview-comment
        with:
          issue-number: ${{ needs.check-draft-status.outputs.pr_number }}
          comment-author: "github-actions[bot]"
          body-includes: Buddy has been automatically deployed to Cloudflare

      - name: Create or update preview URL comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-preview-comment.outputs.comment-id }}
          issue-number: ${{ needs.check-draft-status.outputs.pr_number }}
          body: |
            EdgeTX Buddy has been automatically deployed to Cloudflare.
            ✅ Preview: ${{ steps.cloudflare-preview.outputs.deployment-url }}
            ✅ Storybook: ${{ steps.cloudflare-preview.outputs.deployment-url }}/storybook
          edit-mode: replace

  prepare-web-release:
    needs: [get-context, compile, e2e-web]
    if: ${{ needs.get-context.outputs.should_release == 'true' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Fetch compiled source
        uses: actions/download-artifact@v4
        with:
          name: compiled-ubuntu-22.04
          path: build

      - name: Add build context to web release
        run: |
          mkdir -p build/info
          echo "{
            \"build\": {
              \"original_event\": \"${{ needs.get-context.outputs.original_event }}\", 
              \"original_branch\": \"${{ needs.get-context.outputs.original_branch }}\",
              \"is_tagged\": ${{ needs.get-context.outputs.is_tagged }},
              \"tag_name\": \"${{ needs.get-context.outputs.tag_name }}\"
            }
          }" > build/info/build-info.json

      - name: Upload web renderer for release
        uses: actions/upload-artifact@v4
        with:
          name: web-renderer
          retention-days: 1
          if-no-files-found: error
          path: build/renderer
