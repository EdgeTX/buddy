name: Release

on:
  workflow_run:
    workflows:
      - Build
    branches:
      - main
    types:
      - completed

jobs:
  get-build-context:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-22.04
    outputs:
      is_tagged: ${{ steps.check-tag.outputs.is_tagged }}
      tag_name: ${{ steps.check-tag.outputs.tag_name }}
    steps:
      - name: Check if source workflow was triggered by a tag
        id: check-tag
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const runId = ${{ github.event.workflow_run.id }};
            const { data: workflowRun } = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId
            });

            // Check if the original trigger was a tag
            const isTag = workflowRun.head_branch === null && workflowRun.head_repository.full_name === context.repo.owner + '/' + context.repo.repo;
            let tagName = '';

            if (isTag) {
              // Get the tag name from the commit reference
              const refs = await github.rest.git.listMatchingRefs({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/'
              });
              
              // Find the tag pointing to this commit
              const tag = refs.data.find(ref => ref.object.sha === workflowRun.head_sha);
              if (tag) {
                tagName = tag.ref.replace('refs/tags/', '');
              }
            }

            core.setOutput("is_tagged", isTag.toString());
            core.setOutput("tag_name", tagName);
            console.log(`Is tagged build: ${isTag}, Tag name: ${tagName}`);

  release-web-prod:
    needs: get-build-context
    permissions:
      contents: read
      deployments: write
    runs-on: ubuntu-22.04
    steps:
      - name: Fetch relayed compiled source
        uses: actions/download-artifact@v4
        with:
          name: web-renderer
          path: build/renderer

      - name: Publish
        id: cloudflare-publish
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy build/renderer --project-name=buddy
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release-app:
    needs: get-build-context
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - name: Fetch binaries
        uses: actions/download-artifact@v4
        with:
          pattern: app-builds-*
          path: app-builds
          merge-multiple: true

      - name: Apply 'latest' tag if not a tagged build
        if: needs.get-build-context.outputs.is_tagged != 'true'
        uses: EndBug/latest-tag@latest

      - name: Release latest build
        if: needs.get-build-context.outputs.is_tagged != 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: "Latest Build"
          files: app-builds/*
          prerelease: true
          tag: latest

      - name: Release tagged build
        if: needs.get-build-context.outputs.is_tagged == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: app-builds/*
          prerelease: false
          tag: ${{ needs.get-build-context.outputs.tag_name }}
